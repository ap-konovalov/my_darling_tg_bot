# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
orbs:
  heroku: circleci/heroku@1.2.6
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      BOT_USERNAME: $BOT_USERNAME
      BOT_TOKEN: $BOT_TOKEN
    docker: # run the steps with Docker
      - image: circleci/openjdk:11.0.3-jdk-stretch
        auth:
          username: "3425149"
          password: $DOCKERHUB_PASSWORD
    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: Assemble JAR
          command: |
            # Skip this for other nodes
            if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
              ./gradlew assemble
            fi
      # As the JAR was only assembled in the first build container, build/libs will be empty in all the other build containers.
      - store_artifacts:
          path: build/libs
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
workflows:
  version: 2
  workflow:
    jobs:
      - build
#      - heroku/deploy-via-git:
#            requires:
#              - build